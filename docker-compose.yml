version: '3.8'

services:
  # Main AgroBot Raspberry Pi application
  agrobot-rpi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agrobot-rpi-controller
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    env_file:
      - .env
    volumes:
      # Configuration
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/app/data
      # Hardware access (Raspberry Pi specific)
      - /dev:/dev
      - /sys:/sys:ro
      - /proc:/proc:ro
    devices:
      # USB device for Pixhawk
      - /dev/ttyACM0:/dev/ttyACM0
      # I2C access
      - /dev/i2c-1:/dev/i2c-1
      # SPI access  
      - /dev/spidev0.0:/dev/spidev0.0
      - /dev/spidev0.1:/dev/spidev0.1
    privileged: true  # Required for GPIO access on Raspberry Pi
    network_mode: host  # Required for proper hardware communication
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: agrobot-redis
    restart: unless-stopped
    network_mode: host  # Use host network mode for Redis as well
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: agrobot-network
    driver: bridge

